%title: HAPROXY - Check
%author: xavki




-> HAPROXY : Check <-
=========



<br>
* haproxy dispose de très nombreux check existants

cf: https://www.haproxy.com/fr/documentation/aloha/10-0/traffic-management/lb-layer7/health-checks/

		- mysql
		- pgsql
		- smtp
		- commande tcp
		- redis
		- ldap
		- http

* GUI : vérifier les check

```
listen stats
    bind *:9000
    stats enable
    stats uri /stats
    stats refresh 2s
    stats auth xavki:password
```


------------------------------------------------------------------------------------------------------


-> Configuration de base <-


* install de 1 serveurs web sur le port 80

```
python -m SimpleHTTPServer 80
```

* install haproxy

```
apt-get install haproxy
```

* configuration classique

```
frontend myapp_front
    bind *:80
    mode tcp
    default_backend pool_load

backend pool_load
    mode tcp
    server serv1 172.17.0.3:80
```


------------------------------------------------------------------------------------------------------

-> Check TCP <-



```
backend pool_load
    mode tcp
    option tcp-check
    server serv1 172.17.0.3:80
    server serv2 172.17.0.3:80
```


-----------------------------------------------------------------------------------------------------


-> Check TCP : plus avancé <-


```
backend pool_load
    mode tcp
    option tcp-check
    tcp-check send GET\ /xavki\ HTTP/1.1\r\n
    tcp-check send Host:\ myhost\r\n
    tcp-check send Connection:\ close\r\n
    tcp-check send \r\n
    tcp-check expect string HTTP/1.1\ 200\ OK
    tcp-check expect ! string Error
```


